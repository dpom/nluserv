{:duct.core/project-ns  nluserv
 :duct.core/environment :production


 :duct.module/ataraxy {[:get "/about"]                                [:about]
                       [:get "/train"]                                [:train/train]
                       [:get "/test_train"]                           [:train/test-train]
                       [:post "/get_intent" {message :body-params}]   [:intent/get-intent message]
                       [:get "/test_intent"]                          [:intent/test-intent-get]
                       [:post "/test_intent" {message :form-params}]  [:intent/test-intent message]
                       [:post "/get_dims" {message :body-params}]     [:dims/get-dims message]
                       [:get "/test_dims"]                            [:dims/test-dims-get]
                       [:post "/test_dims" {message :form-params}]    [:dims/test-dims message]
                       [:post "/get_stem" {message :body-params}]     [:stemmer/get-stem message]
                       [:get "/test_stemmer"]                         [:stemmer/test-stemmer-get]
                       [:post "/test_stemmer" {message :form-params}] [:stemmer/test-stemmer message]
                       [:post "/remove_stopwords" {message :body-params}]   [:stopwords/remove-stopwords message]
                       [:get "/test_stopwords"]                          [:stopwords/test-stopwords-get]
                       [:post "/test_stopwords" {message :form-params}]  [:stopwords/test-stopwords message]

                       }

 :nluserv.handler/about {}

 :nluserv.handler.intent/get-intent {:catint #ig/ref :nlptools.tool/classification
                                     :logger #ig/ref :duct/logger}
 :nluserv.handler.intent/test-intent {:catint #ig/ref :nlptools.tool/classification
                                      :logger #ig/ref :duct/logger}
 :nluserv.handler.intent/test-intent-get {:logger #ig/ref :duct/logger}

 :nluserv.handler.dims/get-dims {:tool #ig/ref :clj-duckling.tool/duckling
                                 :logger #ig/ref :duct/logger}
 :nluserv.handler.dims/test-dims {:tool #ig/ref :clj-duckling.tool/duckling
                                  :logger #ig/ref :duct/logger}
 :nluserv.handler.dims/test-dims-get {:tool #ig/ref :clj-duckling.tool/duckling
                                      :logger #ig/ref :duct/logger}

 :nluserv.handler.stemmer/get-stem {:stemmer #ig/ref :nlptools.tool/stemmer
                                    :logger #ig/ref :duct/logger}
 :nluserv.handler.stemmer/test-stemmer {:stemmer #ig/ref :nlptools.tool/stemmer
                                        :logger #ig/ref :duct/logger}
 :nluserv.handler.stemmer/test-stemmer-get {:logger #ig/ref :duct/logger}

 :nluserv.handler.stopwords/remove-stopwords {:stopwords #ig/ref :nlptools.tool/stopwords
                                              :logger #ig/ref :duct/logger}
 :nluserv.handler.stopwords/test-stopwords {:stopwords #ig/ref :nlptools.tool/stopwords
                                            :logger #ig/ref :duct/logger}
 :nluserv.handler.stopwords/test-stopwords-get {:logger #ig/ref :duct/logger}


 :duct.module/logging {}
 :duct.module.web/api {}

 :clj-duckling.tool/duckling {:id "duck-tool"
                              :model #ig/ref :clj-duckling.model/classifier
                              :rules #ig/ref :clj-duckling.engine/edn
                              :logger   #ig/ref :duct.logger/timbre}



 :clj-duckling.engine/edn {:id "dev-rules-edn"
                           :language "ro"
                           :dirpath  #ig/ref :nluserv.duck/rulesdir
                           :logger   #ig/ref :duct.logger/timbre}

 [:nluserv.config/absfilename :nluserv.duck/rulesdir] {:filename "ro/rules"
                                                        :path  #duct/env ["TRAIN_DIR" :or "train"]}


 
 :nlptools.tool/stemmer {:id "stemmer"
                         :language "ro"
                         :logger   #ig/ref :duct/logger}

 :nlptools.tool/stopwords {:id "stopwords"
                           :tokenizer #ig/ref :nlptools.model.tokenizer/simple
                           :logger #ig/ref :duct.logger/timbre}

 :nlptools.tool/classification {:id "classsif"
                                :tokenizer #ig/ref :nlptools.model.tokenizer/simple
                                :model #ig/ref :nlptools.model/classification
                                :logger #ig/ref :duct.logger/timbre}


 :nlptools.model.tokenizer/simple {:logger #ig/ref :duct.logger/timbre}


 :duct.middleware.web/defaults {:params {:urlencoded true,
                                         :keywordize true},
                                :security {:anti-forgery false},
                                :static {:resources ["duct/module/web/public"
                                                     "nluserv/public"]},
                                :responses {:not-modified-responses true,
                                            :absolute-redirects true,
                                            :content-types true,
                                            :default-charset "utf-8"}},

 :duct.server.http/jetty {:port #duct/env ["PORT" Int :or 3000],
                          :handler #ig/ref :duct.core/handler,
                          :logger #ig/ref :duct/logger},


 }
